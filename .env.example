# ============================================================================
# MCP Memory Service - Environment Variables Template
# ============================================================================
# Copy this file to .env and fill in your actual values
# Never commit .env files with real credentials to version control!
#
# For development: Copy to .env or .env.development
# For production: Use Vercel dashboard or .env.production (not committed)
# ============================================================================

# ----------------------------------------------------------------------------
# REQUIRED: Database Configuration (Turso/LibSQL)
# ----------------------------------------------------------------------------
# Get these from: https://turso.tech/
# Create a database and generate an auth token
TURSO_URL=libsql://your-database.turso.io
TURSO_AUTH_TOKEN=your-turso-auth-token

# Database aliases (for compatibility with other tools)
DATABASE_URL=libsql://your-database.turso.io
DATABASE_AUTH_TOKEN=your-turso-auth-token

# ----------------------------------------------------------------------------
# REQUIRED: OpenAI Configuration (for vector embeddings)
# ----------------------------------------------------------------------------
# Get your API key from: https://platform.openai.com/api-keys
# Used for generating semantic embeddings for memory search
OPENAI_API_KEY=sk-proj-your-openai-api-key

# ----------------------------------------------------------------------------
# REQUIRED: Clerk Authentication
# ----------------------------------------------------------------------------
# Get these from: https://dashboard.clerk.com/
#
# DEVELOPMENT KEYS (for testing with localhost)
CLERK_SECRET_KEY=sk_test_your-dev-secret-key
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_test_your-dev-publishable-key
#
# PRODUCTION KEYS (use in production environment)
# CLERK_SECRET_KEY=sk_live_your-production-secret-key
# NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=pk_live_your-production-publishable-key

# Clerk Webhook Secret (REQUIRED for production, optional for dev)
# Used to verify webhook events from Clerk
# Get from: Clerk Dashboard > Webhooks > Signing Secret
CLERK_WEBHOOK_SECRET=whsec_your-webhook-secret

# ----------------------------------------------------------------------------
# Application Configuration
# ----------------------------------------------------------------------------
# Environment: development | production | test
NODE_ENV=development

# Logging level: debug | info | warn | error
LOG_LEVEL=info

# Enable MCP protocol debug logging (0 = off, 1 = on)
MCP_DEBUG=0

# Default user email (for MCP server without Clerk)
DEFAULT_USER_EMAIL=test@example.com

# ----------------------------------------------------------------------------
# Remote MCP Server Configuration
# ----------------------------------------------------------------------------
# HTTP server port for remote MCP access
REMOTE_MCP_PORT=3003

# Bind address (0.0.0.0 = all interfaces, 127.0.0.1 = localhost only)
REMOTE_MCP_HOST=0.0.0.0

# ----------------------------------------------------------------------------
# CORS Configuration
# ----------------------------------------------------------------------------
# DEVELOPMENT: Use * or specific localhost URLs
# CORS_ORIGIN=*
# ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3003
#
# PRODUCTION: Use specific domain URLs (comma-separated, no spaces)
CORS_ORIGIN=https://ai-memory.app,https://www.ai-memory.app
ALLOWED_ORIGINS=https://ai-memory.app,https://www.ai-memory.app,https://clerk.ai-memory.app

# ----------------------------------------------------------------------------
# Rate Limiting Configuration
# ----------------------------------------------------------------------------
# Maximum requests per minute per user
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# Rate limit time window in milliseconds
RATE_LIMIT_WINDOW_MS=60000

# ----------------------------------------------------------------------------
# Session Configuration
# ----------------------------------------------------------------------------
# Session timeout in minutes (default: 120 for production, 480 for dev)
SESSION_TIMEOUT_MINUTES=120

# Session cleanup interval in minutes
SESSION_CLEANUP_INTERVAL_MINUTES=30

# ----------------------------------------------------------------------------
# Security Settings
# ----------------------------------------------------------------------------
# Allow development authentication bypass (MUST be false in production!)
ALLOW_DEV_AUTH=false

# Enable detailed request logging (disable in production for performance)
ENABLE_REQUEST_LOGGING=false

# Enable debug endpoints (disable in production for security)
ENABLE_DEBUG_ENDPOINTS=false

# ----------------------------------------------------------------------------
# Vercel Deployment Configuration
# ----------------------------------------------------------------------------
# Auto-populated by Vercel, or set manually for production
VERCEL_URL=https://your-deployment.vercel.app

# Server port (usually auto-configured by Vercel)
PORT=3003

# ----------------------------------------------------------------------------
# OPTIONAL: Analytics Configuration
# ----------------------------------------------------------------------------
# Enable analytics tracking
ANALYTICS_ENABLED=false

# Analytics API key (if using analytics service)
ANALYTICS_API_KEY=

# ----------------------------------------------------------------------------
# OPTIONAL: Cache Configuration (Redis)
# ----------------------------------------------------------------------------
# Redis connection URL (if using caching)
REDIS_URL=redis://localhost:6379

# Cache TTL in seconds
CACHE_TTL_SECONDS=300

# ----------------------------------------------------------------------------
# OPTIONAL: OpenRouter Configuration (for other AI features)
# ----------------------------------------------------------------------------
# OpenRouter API key for alternative LLM access
OPENROUTER_API_KEY=

# Default model to use with OpenRouter
DEFAULT_MODEL=anthropic/claude-3.5-sonnet

# Model temperature (0.0-1.0)
TEMPERATURE=0.7

# Maximum tokens per request
MAX_TOKENS=2000

# ----------------------------------------------------------------------------
# OPTIONAL: Google OAuth Configuration (for EVA integration)
# ----------------------------------------------------------------------------
# Google OAuth credentials from: https://console.cloud.google.com/
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_API_KEY=

# OAuth callback port
OAUTH_PORT=8400

# Google Cloud project ID
GOOGLE_CLOUD_PROJECT=

# Path to service account credentials JSON file
GOOGLE_APPLICATION_CREDENTIALS=

# EVA debug mode (0 = off, 1 = on)
EVA_DEBUG=0

# ============================================================================
# END OF CONFIGURATION
# ============================================================================